name: test-and-build

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  gosec:
    name: Gosec Security Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - uses: securego/gosec@v2.20.0
        with:
          args: -fmt=json ./...

  lint:
    name: Golangci Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      checks: write  # allow the action to annotate code in the PR
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64 # v6.0.1
        with:
          skip-cache: true  # would not do it in real project
          args: --verbose

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [386, amd64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o bin/mondoohelloworld-${{ matrix.goos }}-${{ matrix.goarch }} -v ./...
          tar -C bin -czf "bin/mondoohelloworld-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" mondoohelloworld-${{ matrix.goos }}-${{ matrix.goarch }}
      - name: Upload binary as GH artifact
        uses: actions/upload-artifact@v4
        with:
          name: webserver-binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/mondoohelloworld-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          retention-days: 7

  publish:
    if: startsWith(github.ref, 'refs/tags/') && github.event.action == 'published'
    name: Publish the artifact on GitHub Release
    runs-on: ubuntu-latest
    needs:
      - gosec
      - lint
      - build
    permissions:
      contents: write
    steps:
      - name: Download GH Artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Push artifact to GH Release
        id: ghrelease
        uses: softprops/action-gh-release@69320dbe05506a9a39fc8ae11030b214ec2d1f87  # 2.0.5
        with:
          fail_on_unmatched_files: true
          files: |
            artifacts/webserver-binary*/mondoohelloworld*
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1.10.1
        with:
          app_id: ${{ vars.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PEM }}
          owner: ${{ github.repository_owner }}
      - name: Trigger Docker build and push
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
             owner: 'tezz123',
             repo: 'mondootest2',
             workflow_id: 'docker.yaml',
             ref: 'main',
             inputs: {
              tag: "${{ github.ref_name }}"
             },
            })
